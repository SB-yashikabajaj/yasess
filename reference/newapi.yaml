openapi: 3.1.0
x-stoplight:
  id: 57gn04k7rjhu7
info:
  title: newapi
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      x-stoplight:
        id: hkp89ozv8sqvl
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
      x-stoplight:
        id: xmwrm62lh00bu
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      x-stoplight:
        id: pc2eccc5uj4i9
  /test:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-test
      x-stoplight:
        id: 51ccvtcrt4e7j
    delete:
      summary: Your DELETE endpoint
      tags: []
      responses: {}
      operationId: delete-test
      x-stoplight:
        id: v7budcu48dfo3
      requestBody:
        content:
          application/javascript:
            schema:
              type: object
              required:
                - wefrwgth
              properties:
                wefrwgth:
                  type: string
                  x-stoplight:
                    id: ptbfn4s88edeo
                  description: nalanda
                wefwrgeth:
                  x-stoplight:
                    id: izmy5vi755nyx
                  oneOf:
                    - type: object
                      x-stoplight:
                        id: hh4sbsihkknoy
                      required:
                        - dfge
                      properties:
                        dfge:
                          type: string
                          x-stoplight:
                            id: 2gg0c7g7kbjf9
                    - type: object
                      x-stoplight:
                        id: ber498gvrjtos
                      properties:
                        wefrgthy:
                          type: string
                          x-stoplight:
                            id: y4fm450gngnco
                    - type: integer
                      x-stoplight:
                        id: tjhao4vbz6aak
                wqefrget:
                  type: string
                  x-stoplight:
                    id: livwc1ehjfztj
            examples:
              Example 1:
                value:
                  wefrwgth: string
                  wefwrgeth:
                    dfge: change
                  wqefrget: string
    trace:
      summary: Your TRACE endpoint
      tags: []
      responses: {}
      operationId: trace-test
      x-stoplight:
        id: fw8vdnfopyt3e
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
          x-stoplight:
            id: iz11075l8ami2
        firstName:
          type: string
          x-stoplight:
            id: wlq18cbcqht5n
        lastName:
          type: string
          x-stoplight:
            id: 7nyebr8uwo3ly
        email:
          type: string
          format: email
          x-stoplight:
            id: 7e4sb12lz6ymh
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
          x-stoplight:
            id: uj7ih781omp1r
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
          x-stoplight:
            id: 8ykzwgttz6bs7
        createDate:
          type: string
          format: date
          description: The date that the user was created.
          x-stoplight:
            id: kwnn6y9dg6ajs
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
      x-stoplight:
        id: zyjnwq3hfajmw
